/**
 * Coding as activism
 * TODO: Add Description
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Event', 'model/Location', 'model/Person', 'model/Role', 'model/Shift', 'model/Status'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Event'), require('./Location'), require('./Person'), require('./Role'), require('./Shift'), require('./Status'));
  } else {
    // Browser globals (root is window)
    if (!root.CodingAsActivism) {
      root.CodingAsActivism = {};
    }
    root.CodingAsActivism.RSVPtoaneventRequest = factory(root.CodingAsActivism.ApiClient, root.CodingAsActivism.Event, root.CodingAsActivism.Location, root.CodingAsActivism.Person, root.CodingAsActivism.Role, root.CodingAsActivism.Shift, root.CodingAsActivism.Status);
  }
}(this, function(ApiClient, Event, Location, Person, Role, Shift, Status) {
  'use strict';




  /**
   * The RSVPtoaneventRequest model module.
   * @module model/RSVPtoaneventRequest
   * @version 1.0
   */

  /**
   * Constructs a new <code>RSVPtoaneventRequest</code>.
   * @alias module:model/RSVPtoaneventRequest
   * @class
   * @param person {module:model/Person} 
   * @param event {module:model/Event} 
   * @param location {module:model/Location} 
   * @param role {module:model/Role} 
   * @param shift {module:model/Shift} 
   * @param status {module:model/Status} 
   */
  var exports = function(person, event, location, role, shift, status) {
    var _this = this;

    _this['person'] = person;
    _this['event'] = event;
    _this['location'] = location;
    _this['role'] = role;
    _this['shift'] = shift;
    _this['status'] = status;
  };

  /**
   * Constructs a <code>RSVPtoaneventRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RSVPtoaneventRequest} obj Optional instance to populate.
   * @return {module:model/RSVPtoaneventRequest} The populated <code>RSVPtoaneventRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('person')) {
        obj['person'] = Person.constructFromObject(data['person']);
      }
      if (data.hasOwnProperty('event')) {
        obj['event'] = Event.constructFromObject(data['event']);
      }
      if (data.hasOwnProperty('location')) {
        obj['location'] = Location.constructFromObject(data['location']);
      }
      if (data.hasOwnProperty('role')) {
        obj['role'] = Role.constructFromObject(data['role']);
      }
      if (data.hasOwnProperty('shift')) {
        obj['shift'] = Shift.constructFromObject(data['shift']);
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = Status.constructFromObject(data['status']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/Person} person
   */
  exports.prototype['person'] = undefined;
  /**
   * @member {module:model/Event} event
   */
  exports.prototype['event'] = undefined;
  /**
   * @member {module:model/Location} location
   */
  exports.prototype['location'] = undefined;
  /**
   * @member {module:model/Role} role
   */
  exports.prototype['role'] = undefined;
  /**
   * @member {module:model/Shift} shift
   */
  exports.prototype['shift'] = undefined;
  /**
   * @member {module:model/Status} status
   */
  exports.prototype['status'] = undefined;



  return exports;
}));


